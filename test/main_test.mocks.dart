// Mocks generated by Mockito 5.3.2 from annotations
// in news_app/test/main_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:news_app/models/news_resp.dart' as _i2;
import 'package:news_app/models/news_user.dart' as _i5;
import 'package:news_app/services/database_service.dart' as _i3;
import 'package:news_app/services/encryption_service.dart' as _i7;
import 'package:news_app/services/news_service.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNewsRespModel_0 extends _i1.SmartFake implements _i2.NewsRespModel {
  _FakeNewsRespModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseServiceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseServiceImpl extends _i1.Mock
    implements _i3.DatabaseServiceImpl {
  MockDatabaseServiceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<dynamic> initDatabase() => (super.noSuchMethod(
        Invocation.method(
          #initDatabase,
          [],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<_i5.NewsUser?> getUser({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i4.Future<_i5.NewsUser?>.value(),
      ) as _i4.Future<_i5.NewsUser?>);
  @override
  _i4.Future<dynamic> saveUser({
    required String? name,
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUser,
          [],
          {
            #name: name,
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
}

/// A class which mocks [NewsServiceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockNewsServiceImpl extends _i1.Mock implements _i6.NewsServiceImpl {
  MockNewsServiceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.NewsRespModel> getNews({required String? pageNumber}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNews,
          [],
          {#pageNumber: pageNumber},
        ),
        returnValue: _i4.Future<_i2.NewsRespModel>.value(_FakeNewsRespModel_0(
          this,
          Invocation.method(
            #getNews,
            [],
            {#pageNumber: pageNumber},
          ),
        )),
      ) as _i4.Future<_i2.NewsRespModel>);
}

/// A class which mocks [NewsRespModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockNewsRespModel extends _i1.Mock implements _i2.NewsRespModel {
  @override
  set status(String? _status) => super.noSuchMethod(
        Invocation.setter(
          #status,
          _status,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set totalResults(int? _totalResults) => super.noSuchMethod(
        Invocation.setter(
          #totalResults,
          _totalResults,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set articles(List<_i2.Article>? _articles) => super.noSuchMethod(
        Invocation.setter(
          #articles,
          _articles,
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [NewsUser].
///
/// See the documentation for Mockito's code generation for more information.
class MockNewsUser extends _i1.Mock implements _i5.NewsUser {
  @override
  String get email => (super.noSuchMethod(
        Invocation.getter(#email),
        returnValue: '',
      ) as String);
  @override
  String get userName => (super.noSuchMethod(
        Invocation.getter(#userName),
        returnValue: '',
      ) as String);
  @override
  String get encrpytedPassword => (super.noSuchMethod(
        Invocation.getter(#encrpytedPassword),
        returnValue: '',
      ) as String);
  @override
  String get userKeyString => (super.noSuchMethod(
        Invocation.getter(#userKeyString),
        returnValue: '',
      ) as String);
}

/// A class which mocks [EncryptionServiceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockEncryptionServiceImpl extends _i1.Mock
    implements _i7.EncryptionServiceImpl {}
